saveRDS(
bf_status,
file = here::here("afia/output/graph2.rds"))
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", hjust=1, nudge_x=0.2) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.2) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.02) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=-0.2, nudge_y=-0.04) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.04) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.03) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)")
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.03) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)") +
ylim(0, 2.2)
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.03) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)") +
ylim(0, 2.2) +
geom_hline(yintercept=2)
turbidity %>%
ggplot(aes(x = Turbidity, y = FreeChlorine, label=Dilution)) +
geom_text(size=3, hjust="inward", nudge_x=0.2, nudge_y=-0.03) +
geom_point() +
theme_bw() +
ggtitle("Turbidity and Free Chlorine of Environmental Water Sample") +
xlab("Turbidity (NTU)") +
ylab("Free Chlorine (mg/L)") +
ylim(0, 2.2) +
geom_hline(yintercept=2, color="red")
View(projectdata)
#! TO DO:
#!   add call to here::i_am
here::i_am("alex/code/01_make_table1.R")
data <- read.csv(
file = here::here("data/f75_interim.csv")
)
library("labelled")
library("table1")
#Name the variables for the table
var_label(data) <- list(
site = "Study Site",
agemons = "Age in months",
sex = "Sex",
caregiver = "Main care giver to the child",
bfeeding = "Child Still Breastfeeding",
shock = "Shock requiring fluid",
iconsciousness = "Impaired consciousness",
sev_pneumonia = "Severe Pneumonia",
diarrhoea = "Diarrhoea",
malaria = "Malaria",
ofillness = "Other Febrile Illness",
tb = "Known TB (being treated)",
chronic_cough = "Chronic cough >| month",
sickle_cell = "Known Sickle Cell Disease",
heart_disease = "Known congenital or acquired heart disease",
cerebral_palsy = "Known cerebral palsy or severe developmental delay",
hiv_results = "HIV antibody test",
kwash = "Kwashiorkor"
)
#Create a table one of the demographics
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=data, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
saveRDS(
table_one,
file = here::here("alex/output/table_one.rds")
)
#Create a table one of the demographics
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=data, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
table_one
here::i_am("erika/code/02_make_figure1.R")
library(ggplot2)
library(tidyr)
library(dplyr)
# Load the dataset
absolute_path_to_f75_interim <- here::here
data <- read.csv(file = here::here("data/f75_interim.csv"))
# Select only the muac, muac1, and muac2 variables
muac_data <- data[, c("subjid", "arm", "muac", "muac1", "muac2")]
muac_data <- na.omit(muac_data)
# Filter the data for only "Modified F75 (intervention)" and "Standard F75" arms
muac_data_filtered <- muac_data %>%
filter(arm %in% c("Modified F75 (intervention)", "Standard F75"))
# Convert the data from wide to long format and rename the columns
muac_data_filtered <- muac_data_filtered %>%
pivot_longer(cols = c(muac, muac1, muac2),
names_to = "period_arm",
values_to = "muac") %>%
mutate(period_arm = factor(period_arm, levels = c("muac", "muac1", "muac2"),
labels = c("Baseline", "Stabilization", "Endpoint")))
# Create box plot with different colors for each arm
p <- ggplot(muac_data_filtered, aes(x = period_arm, y = muac, fill = arm)) +
geom_boxplot() +
scale_x_discrete(labels = c("muac" = "Baseline", "muac1" = "Stabilization", "muac2" = "Endpoint")) +
labs(x = "Period", y = "MUAC cm", title = "Comparison of MUAC Variables Over Time by Arm") +
scale_fill_manual(values = c("#a1d99b", "#bdbdbd")) +
theme_minimal()
# Save the plot as a PNG file
ggsave(
here::here("erika/output/muac_boxplot.png"),
plot = p,
device = "png",
width = 6,
height = 4
)
# Select only the weight, weight1, and weight2 variables
weight_data <- data[, c("subjid", "arm", "weight", "weight1", "weight2")]
weight_data <- na.omit(weight_data)
# Filter the data for only "Modified F75 (intervention)" and "Standard F75" arms
weight_data_filtered <- weight_data %>%
filter(arm %in% c("Modified F75 (intervention)", "Standard F75"))
# Convert the data from wide to long format and rename the columns
weight_data_filtered <- weight_data_filtered %>%
pivot_longer(cols = c(weight, weight1, weight2),
names_to = "period_arm",
values_to = "weight") %>%
mutate(period_arm = factor(period_arm, levels = c("weight", "weight1", "weight2"),
labels = c("Baseline", "Stabilization", "Endpoint")))
# Create box plot with different colors for each arm
p <- ggplot(weight_data_filtered, aes(x = period_arm, y = weight, fill = arm)) +
geom_boxplot() +
scale_x_discrete(labels = c("weight" = "Baseline", "weight1" = "Stabilization", "weight2" = "Endpoint")) +
labs(x = "Period", y = "Weight Kg", title = "Comparison of Weight Variables Over Time by Arm") +
scale_fill_manual(values = c("#a1d99b", "#bdbdbd")) +  # Set custom colors here
theme_minimal()
# Save the plot as a PNG file
ggsave(
here::here("erika/output/weight_boxplot.png"),
plot = p,
device = "png",
width = 6,
height = 4
)
# Select only the height, height1, and height2 variables
height_data <- data[, c("subjid", "arm", "height", "height2")]
height_data <- na.omit(height_data)
# Filter the data for only "Modified F75 (intervention)" and "Standard F75" arms
height_data_filtered <- height_data %>%
filter(arm %in% c("Modified F75 (intervention)", "Standard F75"))
# Convert the data from wide to long format and rename the columns
height_data_filtered <- height_data_filtered %>%
pivot_longer(cols = c(height, height2),
names_to = "period_arm",
values_to = "height") %>%
mutate(period_arm = factor(period_arm, levels = c("height","height2"),
labels = c("Baseline", "Endpoint")))
# Create box plot with different colors for each arm
p <- ggplot(height_data_filtered, aes(x = period_arm, y = height, fill = arm)) +
geom_boxplot() +
scale_x_discrete(labels = c("height" = "Baseline", "height2" = "Endpoint")) +
labs(x = "Period", y = "Height cm", title = "Comparison of Height Variables Over Time by Arm") +
scale_fill_manual(values = c("#a1d99b", "#bdbdbd")) +  # Set custom colors here
theme_minimal()
# Save the plot as a PNG file
ggsave(
here::here("erika/output/height_boxplot.png"),
plot = p,
device = "png",
width = 6,
height = 4
)
here::i_am("Report.Rmd")
knitr::include_graphics(
here::here("erika/output/muac_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/height_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/weight_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/oedema_barchart.png"))
table1 <- readRDS(
here::here("alex/output/table_one.rds"))
library(ggplot2)
library(tidyr)
here::i_am("erika/code/03_make_figure2.R")
absolute_path_to_f75_interim <- here::here
data <- read.csv(file = here::here("data/f75_interim.csv"))
# Filter the data for "Modified F75 (intervention)" and "Standard F75" groups
intervention_data <- data[data$arm == "Modified F75 (intervention)", ]
control_data <- data[data$arm == "Standard F75", ]
# Calculate frequencies of sex within each level of oedema for intervention group
intervention_sex_oedema_freq <- table(intervention_data$oedema, intervention_data$sex)
# Create a data frame for intervention group plotting
plot_data_intervention <- as.data.frame(intervention_sex_oedema_freq)
names(plot_data_intervention) <- c("oedema_level", "sex", "frequency")
plot_data_intervention$group <- "Intervention"
# Calculate frequencies of sex within each level of oedema for control group
control_sex_oedema_freq <- table(control_data$oedema, control_data$sex)
# Create a data frame for control group plotting
plot_data_control <- as.data.frame(control_sex_oedema_freq)
names(plot_data_control) <- c("oedema_level", "sex", "frequency")
plot_data_control$group <- "Control"
# Combine data frames for intervention and control groups
plot_data <- rbind(plot_data_intervention, plot_data_control)
# Create stacked bar plot
plot <- ggplot(plot_data, aes(x = oedema_level, y = frequency, fill = sex)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ group) +
labs(x = "Oedema Level", y = "Frequency", title = "Sex Distribution for Various Levels of Oedema") +
scale_fill_manual(values = c("#1F77B4", "#FF7F0E"), name = "Sex", labels = c("Male", "Female")) +
theme_minimal()
# Save the plot
ggsave(
here::here("erika/output/oedema_barchart.png"),
plot = plot,
width = 6,
height = 4,
dpi = 300,
units = "in",
device = "png"
)
table1 <- readRDS(
here::here("alex/output/table_one.rds"))
print(table1)
table1 <- readRDS(
here::here("alex/output/table_one.rds"))
print(table1)
figure3 <- readRDS(
here::here("afia/output/graph1.rds"))
print(figure3)
figure4 <- readRDS(
here::here("afia/output/graph2.rds"))
print(figure4)
here::i_am(
"tina/code/05_regression_figure2.R"
)
library(dplyr)
library(ggplot2)
df <-
read.csv("data/f75_interim.csv")
cleaned_df <- cleaned_df %>%
filter(!is.na(muac1) & !is.na(weight1) & is.finite(muac1) & is.finite(weight1))
here::i_am(
"tina/code/05_regression_figure2.R"
)
library(dplyr)
library(ggplot2)
df <-
read.csv("data/f75_interim.csv")
cleaned_df <- cleaned_df %>%
filter(!is.na(muac1) & !is.na(weight1) & is.finite(muac1) & is.finite(weight1))
here::i_am(
"tina/code/04_regression_figure1.R"
)
library(ggplot2)
df <-
read.csv("data/f75_interim.csv")
model <- lm(weight ~ muac, data = df)
intercept <- coef(model)[1]
slope <- coef(model)[2]
equation <- paste("y = ", round(intercept, 2), " + ", round(slope, 2), "x", sep = "")
reg_plot1 <- ggplot(df, aes(x = muac, y = weight)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE) +
labs(x = "MUAC", y = "Weight") +
annotate("text", x = Inf, y = Inf, label = equation, hjust = 1.1, vjust = 2, size = 3.5) +
theme_minimal()
here::i_am(
"tina/code/05_regression_figure2.R"
)
library(dplyr)
library(ggplot2)
df <-
read.csv("data/f75_interim.csv")
cleaned_df <- cleaned_df %>%
filter(!is.na(muac1) & !is.na(weight1) & is.finite(muac1) & is.finite(weight1))
here::i_am(
"tina/code/05_regression_figure2.R"
)
library(dplyr)
library(ggplot2)
df <-
read.csv("data/f75_interim.csv")
cleaned_df <- df %>%
filter(!is.na(muac1) & !is.na(weight1) & is.finite(muac1) & is.finite(weight1))
cleaned_df$arm <- as.factor(cleaned_df$arm)
data_group1 <- subset(cleaned_df, arm == levels(cleaned_df$arm)[1])
data_group2 <- subset(cleaned_df, arm == levels(cleaned_df$arm)[2])
model_group1 <- lm(weight1 ~ muac1, data = data_group1)
model_group2 <- lm(weight1 ~ muac1, data = data_group2)
coef_group1 <- coef(model_group1)
coef_group2 <- coef(model_group2)
text_group1 <- paste("Modified F75: y =", round(coef_group1[1], 2), "+", round(coef_group1[2], 2), "x")
text_group2 <- paste("Standard F75: y =", round(coef_group2[1], 2), "+", round(coef_group2[2], 2), "x")
plot <- ggplot(cleaned_df, aes(x = muac1, y = weight1, color = arm)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "MUAC1", y = "Weight1", color = "Milk Group") +
theme_minimal()
full_plot <- plot +
annotate("text", x = Inf, y = Inf, label = text_group1, hjust = 1.1, vjust = 1, size = 3) +
annotate("text", x = Inf, y = Inf, label = text_group2, hjust = 1.1, vjust = 2, size = 3)
ggsave(
file = "tina/output/reg_plot2.png",
plot = full_plot,
device = "png"
)
?var_label()
table_one <- readRDS("~/Documents/data550_group5/alex/output/table_one.rds")
table_one
#loading packages
library(pacman)
p_load(tidyverse, ggplot2, knitr, labelled, gtsummary, haven, table1)
here::i_am("Report.Rmd")
#reading in the data set
projectdata <- read.csv(file = here::here("data/f75_interim.csv"))
var_label(projectdata) <- list(
agemons = "Age (months)",
sex = "Sex assigned at birth",
caregiver = "Primary Caregiver",
bfeeding = "Current Breastfeeding Status",
muac = "MUAC (cms) at baseline",
muac1 = "MUAC (cms) at stabilization",
muac2 = "MUAC (cms) at discharge/death/widthdrawl",
arm = "Formula type"
)
library(pacman)
p_load(tidyverse, ggplot2, knitr, labelled, gtsummary)
here::i_am("afia/code/01_breastfeeding_table.R")
projectdata <- read.csv(file = here::here("data/f75_interim.csv"))
var_label(projectdata) <- list(
agemons = "Age (months)",
sex = "Sex assigned at birth",
caregiver = "Primary Caregiver",
bfeeding = "Current Breastfeeding Status",
muac = "MUAC (cms) at baseline",
muac1 = "MUAC (cms) at stabilization",
muac2 = "MUAC (cms) at discharge/death/widthdrawl"
)
# Descriptive stats for breastfeeding
table1 <- projectdata %>%
dplyr::select(bfeeding, agemons, sex, caregiver, muac, muac1, muac2) %>%
tbl_summary(by = bfeeding) %>%
add_overall() %>%
add_p() %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Breastfeeding status**")
table1
saveRDS(
table1,
file = here::here("afia/output/table1.rds")
)
library(pacman)
p_load(tidyverse, ggplot2, knitr, labelled, gtsummary)
here::i_am("afia/code/04_treatment type_graph.R")
projectdata <- read.csv(file = here::here("data/f75_interim.csv"))
# Days to stabilization by treatment type
trtment_type <- projectdata %>% filter(days_stable != 999) %>%
ggplot( aes(x=arm, y=days_stable)) +
geom_boxplot() +
ggtitle("Days to Stabilization by formula type")+
xlab("Formula type")+
ylab("Days to Stabilization")
trtment_type
saveRDS(
bf_status,
file = here::here("afia/output/graph2.rds"))
library(pacman)
p_load(tidyverse, ggplot2, knitr, labelled, gtsummary)
here::i_am("afia/code/04_treatment type_graph.R")
projectdata <- read.csv(file = here::here("data/f75_interim.csv"))
# Days to stabilization by treatment type
trtment_type <- projectdata %>% filter(days_stable != 999) %>%
ggplot( aes(x=arm, y=days_stable)) +
geom_boxplot() +
ggtitle("Days to Stabilization by formula type")+
xlab("Formula type")+
ylab("Days to Stabilization")
trtment_type
saveRDS(
trtment_type,
file = here::here("afia/output/graph2.rds"))
here::i_am("erika/code/03_barchart_oedema.R")
absolute_path_to_f75_interim <- here::here
data <- read.csv(file = here::here("data/f75_interim.csv"))
# Filter the data for "Modified F75 (intervention)" and "Standard F75" groups
intervention_data <- data[data$arm == "Modified F75 (intervention)", ]
control_data <- data[data$arm == "Standard F75", ]
# Calculate frequencies of sex within each level of oedema for intervention group
intervention_sex_oedema_freq <- table(intervention_data$oedema, intervention_data$sex)
# Create a data frame for intervention group plotting
plot_data_intervention <- as.data.frame(intervention_sex_oedema_freq)
names(plot_data_intervention) <- c("oedema_level", "sex", "frequency")
plot_data_intervention$group <- "Intervention"
# Calculate frequencies of sex within each level of oedema for control group
control_sex_oedema_freq <- table(control_data$oedema, control_data$sex)
# Create a data frame for control group plotting
plot_data_control <- as.data.frame(control_sex_oedema_freq)
names(plot_data_control) <- c("oedema_level", "sex", "frequency")
plot_data_control$group <- "Control"
# Combine data frames for intervention and control groups
plot_data <- rbind(plot_data_intervention, plot_data_control)
# Create stacked bar plot
plot <- ggplot(plot_data, aes(x = oedema_level, y = frequency, fill = sex)) +
geom_bar(stat = "identity", position = "stack") +
facet_wrap(~ group) +
labs(x = "Oedema Level", y = "Frequency", title = "Sex Distribution for Various Levels of Oedema") +
scale_fill_manual(values = c("#1F77B4", "#FF7F0E"), name = "Sex", labels = c("Male", "Female")) +
theme_minimal()
# Save the plot
ggsave(
here::here("erika/output/03_oedema_barchart.png"),
plot = plot,
width = 6,
height = 4,
dpi = 300,
units = "in",
device = "png"
)
p_load(tidyverse, ggplot2, knitr, labelled, gtsummary, haven, table1)
table1 <- readRDS(
here::here("alex/output/01_table1.rds"))
print(table1)
install.packages(renv)
install.packages("renv")
table_one <- gesi %>%
select("region", "wash_staff_gesi_trained_percent", "wash_staff_field_percent_female", "wash_staff_no_percent_female", "gesi_budget") %>%
tbl_summary(by = region,
type = list(wash_staff_no_percent_female ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} / {N} ({p}%)"),
missing_text = "(Missing)",
label = list(wash_staff_gesi_trained_percent ~ "Percent of Staff Trained in GESI",
wash_staff_field_percent_female ~ "Percent of Field Staff who are Female",
wash_staff_no_percent_female ~ "Percent of National Office Staff who are Female",
gesi_budget ~ "Do you have a budget for GESI?"))
library("table1")
#Create a table one of the demographics
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=data, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=data, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
#Create a table one of the demographics
table_one <- table1(~ site + agemons + sex + caregiver + bfeeding + shock + iconsciousness + sev_pneumonia + diarrhoea + malaria + ofillness + tb + chronic_cough +  sickle_cell + heart_disease + cerebral_palsy + hiv_results + kwash| arm, data=data, caption = "Table 1: Summary of Demographic Factors by Intervention", render.missing = NULL)
knitr::include_graphics(
here::here("erika/output/02_muac_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/02_height_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/02_weight_boxplot.png"))
knitr::include_graphics(
here::here("erika/output/03_oedema_barchart.png"))
knitr::include_graphics(
here::here("tina/output/04_reg_plot1.png"))
knitr::include_graphics(
here::here("tina/output/05_reg_plot2.png"))
figure3 <- readRDS(
here::here("afia/output/07_bf_graph.rds"))
print(figure3)
figure4 <- readRDS(
here::here("afia/output/09_treatment_graph.rds"))
print(figure4)
figure3 <- readRDS(
here::here("afia/output/07_bf_graph.rds"))
print(figure3)
figure4 <- readRDS(
here::here("afia/output/09_treatment_graph.rds"))
print(figure4)
